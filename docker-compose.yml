version: "3.9"

volumes:
  db-store:
  psysh-store:
  pma-session-store:


networks:
  internal:
    driver: bridge
  public:
    driver: bridge
    external: true

services:
  traefik:
    image: "traefik:v2.9"
    restart: unless-stopped
    command:
      - "--accesslog=true"
      - "--log.level=DEBUG"
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=public"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    networks:
      - public
      - internal
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

  app:
    build:
      context: .
    restart: unless-stopped
    volumes:
      - ./src/:/data/
    ports:
      - "9000:9000"
    networks:
      - internal
    env_file:
      - ./src/.env
    environment:
      - XDEBUG_SESSION=1

  web:
    image: nginx:stable-alpine
    restart: unless-stopped
    environment:
      - TZ=UTC
    volumes:
      - ./src/:/data
      - "./infra/docker/nginx/default.conf:/etc/nginx/conf.d/default.conf"
    networks:
      - internal
      - public
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=Host(`lendrapp.shop`) && PathPrefix(`/`)"
      - "traefik.http.routers.web.middlewares=web-cors@docker"
      - "traefik.http.middlewares.web-cors.headers.accesscontrolallowmethods=OPTIONS,GET,POST,PUT,PATCH,DELETE"
      - "traefik.http.middlewares.web-cors.headers.accesscontrolallowheaders=Accept,Accept-Language,Content-Language,Content-Type,Referer,User-Agent,Authorization,X-Csrf-Token"
      - "traefik.http.middlewares.web-cors.headers.accesscontrolallowcredentials=true"
      - "traefik.http.middlewares.web-cors.headers.accesscontrolalloworiginlist=http://lendrapp.shop"
      - "traefik.http.middlewares.web-cors.headers.accesscontrolexposeheaders=Cache-Control,Expires,Last-Modified,Pragma,Content-Language,Content-Type,Content-Length,Location"
      - "traefik.http.middlewares.web-cors.headers.accesscontrolmaxage=100"
      - "traefik.http.middlewares.web-cors.headers.addvaryheader=true"

  db:
    image: mariadb:10.6.12
    restart: unless-stopped
    command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci
    ports:
      - "3306:3306"
    volumes:
      - ./data/db/lendr.sql:/docker-entrypoint-initdb.d/schema.sql
      - ./_data/:/var/lib/mysql
    env_file:
      - env/db.env
    networks:
      - internal
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "-u$$MYSQL_USER",
          "-p$$MYSQL_PASSWORD",
          "ping",
          "--silent"
        ]

  redis:
    image: "redis:alpine"
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
    logging:
      driver: json-file
      options:
        max-size: "1000k"
        max-file: "2"
    container_name: redis
    sysctls:
      net.core.somaxconn: '1024'
    restart: unless-stopped
    command: /bin/sh -c "redis-server --requirepass $$REDIS_PASSWORD"
    env_file:
      - env/redis.env
    networks:
      - internal

  horizon:
    build:
      context: .
    restart: unless-stopped
    networks:
      - internal
    command: 'php /data/artisan horizon'
    volumes:
      - ./logs/horizon:/data/storage/logs:delegated
    env_file:
      - env/horizon.env
    logging:
      driver: json-file
      options:
        max-size: "1000k"
        max-file: "2"
  
  composer:
    image: composer:2
    command: install
    container_name: composer
    volumes:
      - ./src:/data
    working_dir: /data
    entrypoint: ['composer', '--ignore-platform-reqs']
    networks:
      - internal

  npm:
    image: node:latest
    volumes:
      - ./src:/data
    working_dir: /data
    entrypoint: [ 'npm' ]

  artisan:
    build:
      context: .
    volumes:
      - ./src:/data:delegated
    depends_on:
      - db
    working_dir: /data
    entrypoint: [ 'php', '/data/artisan' ]
    networks:
      - internal

  mailpit:
    image: axllent/mailpit:latest
    container_name: mailpit
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mailpit.rule=Host(`mail.lendrapp.shop`)"
      - "traefik.http.services.mailpit.loadbalancer.server.port=8025"
      - "traefik.docker.network=public"
      - "traefik.http.routers.mailpit.middlewares=mailpit-cors@docker"
      - "traefik.http.middlewares.mailpit-cors.headers.accesscontrolallowmethods=OPTIONS,GET,POST,PUT,PATCH,DELETE"
      - "traefik.http.middlewares.mailpit-cors.headers.accesscontrolallowheaders=Accept,Accept-Language,Content-Language,Content-Type,Referer,User-Agent,Authorization,SYNC-API-KEY,X-Csrf-Token"
      - "traefik.http.middlewares.mailpit-cors.headers.accesscontrolallowcredentials=true"
      - "traefik.http.middlewares.mailpit-cors.headers.accesscontrolalloworiginlist=http://mail.lendrapp.shop"
      - "traefik.http.middlewares.mailpit-cors.headers.accesscontrolexposeheaders=Cache-Control,Expires,Last-Modified,Pragma,Content-Language,Content-Type,Content-Length,Location"
      - "traefik.http.middlewares.mailpit-cors.headers.accesscontrolmaxage=100"
      - "traefik.http.middlewares.mailpit-cors.headers.addvaryheader=true"
    restart: unless-stopped
    env_file:
      - env/mailpit.env
    volumes:
      - ./data/mail/mailpit:/data
    networks:
      - internal
      - public

  pma:
    image: phpmyadmin/phpmyadmin:5.0.2
    ports:
      - 8090:80
    volumes:
      - pma-session-store:/sessions
    networks:
      - internal
    env_file:
      - env/pma.env
